eurekaserver:
   build: fb-eureka-server
   hostname: eurekaserver
   ports:
   - "8761:8761"
   expose:
   - "8761"
#dockerui:
#  image: dockerui/dockerui
#  privileged: true
#  ports:
#  - "9000:9000"
#  volumes:
#  - /var/run/docker.sock:/var/run/docker.sock
#  mem_limit: 56m
#icinga:
#   build: icinga
#   hostname: icinga-host
#   ports:
#   - "8092:80"
#   links:
#   - ui:invoices-ui
#   - invoices:fb-invoices-service
#   - repository:fb-backend
#   - expenses:fb-expenses-service
#   - customers:fb-customer-service
#   - templates:fb-templates-service
#   volumes_from: ['repository', 'ui','invoices', 'expenses', 'customers', 'templates']
#   mem_limit: 1g
ui:
   build: fb-web
   ports:
   - "80:8080"
   links:
   - invoices
   - expenses
   - customers
   - templates
   - graphite
   - eurekaserver
   command: java -Djava.security.egd=file:/dev/./urandom -jar /sources/app.jar
   volumes_from: ['lsf']
invoices:
   build: fb-invoices
   expose:
   - "8081"
   links:
   - repository:fb-repository
   - graphite
   - eurekaserver
   command: java -Djava.security.egd=file:/dev/./urandom -jar /sources/app.jar
   volumes_from: ['lsf']
expenses:
   build: fb-expenses
   expose:
   - "8081"
   links:
   - repository:fb-repository
   - logstash
   - graphite
   - eurekaserver
   command: java -Djava.security.egd=file:/dev/./urandom -jar /sources/app.jar
   volumes_from: ['lsf']
customers:
   build: fb-customers
   expose:
   - "8081"
   links:
   - repository:fb-repository
   - logstash
   - graphite
   - eurekaserver
   command: java -Djava.security.egd=file:/dev/./urandom -jar /sources/app.jar
   volumes_from: ['lsf']
#eventstore:
#   build: eventstore
#   links:
#   - eurekaserver
#   - rabbitmq
templates:
   build: fb-template
   expose:
   - "8081"
   links:
   - mongo
   - logstash
   - graphite
   - eurekaserver
   command: java -Djava.security.egd=file:/dev/./urandom -jar /sources/app.jar
   volumes_from: ['lsf']
repository:
   build: fb-repository
   expose:
   - "8080"
   command: java -Djava.security.egd=file:/dev/./urandom -jar /sources/app.jar
   volumes_from: ['lsf']
   environment:
   - user_email
   - user_apiKey
   - spring.profiles.active=mock
   links:
   - graphite
   - eurekaserver
lsf:
   build: logstash-forwarder
   links:
   - logstash
   volumes:
   - /var/log/
elasticvolume:
   build: elasticsearch-volume
   mem_limit: 4m
elasticsearch:
  user: root
  build: elasticsearch
  expose:
  - "9200"
  - "9300"
  ports:
  - "9200:9200"
  - "9300:9300"
  volumes_from: ['elasticvolume']
  mem_limit: 1g
logstash:
  build: logstash
  expose:
  - "5000"
  links:
   - elasticsearch:es
  mem_limit: 1g
kibana:
  build: kibana
  expose:
  - "80"
  ports:
  - "8090:80"
graphite:
  image: hopsoft/graphite-statsd
  ports:
  #keep this port exposed so that grafana can access it from the browser
  - "8080:80"
  #keep this port exposed so that systems with static configuration can access it
  - "2003:2003"
  - "2004:2004"
  expose:
  - "2003"
  - "2004"
  - "8080"
grafana:
  build: grafana
  ports:
  - "8091:80"
  links:
  - graphite
  mem_limit: 56m
mongo:
  hostname: mongo
  image: mongo
  volumes:
  - /data/db
  expose:
  - "27017"
  ports:
  - "27017:27017"
mongographite:
  build: mongo-graphite
  links:
  - graphite
  - mongo
  volumes_from: ['lsf']
rabbitmq:
  hostname: rabbitmq
  image: rabbitmq:3.5.1-management
  ports:
  - "5672:5672"
  - "15672:15672"

