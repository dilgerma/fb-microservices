dockerui:
  image: dockerui/dockerui
  privileged: true
  ports:
  - "9000:9000"
  volumes:
  - /var/run/docker.sock:/var/run/docker.sock
  mem_limit: 56m
icinga:
   build: icinga
   hostname: icinga-host
   ports:
   - "8092:80"
   links:
   - ui:invoices-ui
   - invoices:fb-invoices-service
   - repository:fb-backend
   - expenses:fb-expenses-service
   - customers:fb-customer-service
   - templates:fb-templates-service
   volumes_from: ['repository', 'ui','invoices', 'expenses', 'customers', 'templates']
   mem_limit: 1g
ui:
   build: fb-web
   hostname: fb-web
   ports:
   - "80:8080"
   links:
   - invoices
   - expenses
   - customers
   - graphite
   command: java -Djava.security.egd=file:/dev/./urandom -jar /sources/app.jar
   volumes_from: ['lsf']
   mem_limit: 324m
invoices:
   build: fb-invoices
   hostname: fb-invoices
   expose:
   - "8081"
   links:
   - repository:repository
   - graphite
   command: java -Djava.security.egd=file:/dev/./urandom -jar /sources/app.jar
   volumes_from: ['lsf']
   mem_limit: 324m
expenses:
   build: fb-expenses
   hostname: fb-expenses
   expose:
   - "8081"
   links:
   - repository:repository
   - logstash
   - graphite
   command: java -Djava.security.egd=file:/dev/./urandom -jar /sources/app.jar
   volumes_from: ['lsf']
   mem_limit: 324m
customers:
   build: fb-customers
   hostname: fb-customers
   expose:
   - "8081"
   links:
   - repository:repository
   - logstash
   - graphite
   command: java -Djava.security.egd=file:/dev/./urandom -jar /sources/app.jar
   volumes_from: ['lsf']
   mem_limit: 324m
templates:
   build: fb-template
   hostname: fb-template
   expose:
   - "8081"
   links:
   - mongo
   - logstash
   - graphite
   command: java -Djava.security.egd=file:/dev/./urandom -jar /sources/app.jar
   volumes_from: ['lsf']
   mem_limit: 324m
repository:
   build: fb-repository
   hostname: fb-repository
   expose:
   - "8080"
   command: java -Djava.security.egd=file:/dev/./urandom -Dspring.profiles.active=mock -jar /sources/app.jar
   volumes_from: ['lsf']
   environment:
   - user_email
   - user_apiKey
   links:
   - graphite
   mem_limit: 324m
lsf:
   build: logstash-forwarder
   links:
   - logstash
   volumes:
   - /var/log/app
elasticvolume:
   build: elasticsearch-volume
   mem_limit: 4m
elasticsearch:
  user: root
  build: elasticsearch
  expose:
  - "9200"
  - "9300"
  ports:
  - "9200:9200"
  - "9300:9300"
  volumes_from: ['elasticvolume']
  mem_limit: 1g
logstash:
  build: logstash
  expose:
  - "5000"
  links:
   - elasticsearch:es
  mem_limit: 1g
kibana:
  build: kibana
  expose:
  - "80"
  ports:
  - "8090:80"
  mem_limit: 128m
graphite:
  image: hopsoft/graphite-statsd
  ports:
  - "8080:80"
  expose:
  - "2003"
  mem_limit: 1g
grafana:
  build: grafana
  ports:
  - "8091:80"
  links:
  - graphite
  mem_limit: 56m
mongo:
  image: dockerfile/mongodb
  volumes:
  - /data/db
  expose:
  - "27017"
  ports:
  - "27017:27017"
  mem_limit: 512m

