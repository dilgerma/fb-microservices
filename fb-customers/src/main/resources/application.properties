spring.application.name = customers
server.port=${port:8081}
#repository is the name of the linked container, exposed in /etc/hosts
eureka.client.serviceUrl.defaultZone=http://eurekaserver:8761/eureka/
eureka.instance.metadataMap.instanceId=${spring.application.name}:${spring.application.instance_id:random.value}}
eureka.instance.preferIpAddress=true


fb.repository.service = FB-REPOSITORY
fb.repository.customer.endpoint = rest/fastbill/customers
fb.repository.customer = http://${fb.repository.service}/${fb.repository.customer.endpoint}
fb.repository.customer.modify.endpoint = rest/fastbill/customer
fb.repository.modify.customer = http://${fb.repository.service}/${fb.repository.customer.modify.endpoint}

rest.nagging.enabled=true
rest.client.retries = 3
rest.client.connectionTimeout = 10000
rest.client.readTimeout = 10000

rabbit.uri = messaging
rabbit.port = 5672

eventstore.eventExchange = eventStore.inbound.events

spring.boot.admin.url=http://bootadmin:8080

influx.port=8086
influx.uri=http://influxdb:${influx.port}
influx.user=root
influx.password=root
influx.db=metrics
influx.prefix=customer

###
# oauth2
###
spring.oauth2.resource.service-id=${spring.application.name}
spring.oauth2.resource.token-info-uri=http://authserver:8080/auth/oauth/token
spring.oauth2.resource.prefer-token-info=true
security.basic.enabled=false

logging.level.org.springframework.security=DEBUG