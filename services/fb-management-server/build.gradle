buildscript {
    repositories {
        mavenCentral()
        maven {
            url = 'http://repo.spring.io/milestone'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: "io.spring.dependency-management"

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-starter-parent:$springCloudStarterParentVersion"
        mavenBom "org.springframework.boot:spring-boot-starter-parent:$springBootVersion"

    }
}

jar {
    baseName = "fb-management-server"
}

repositories {
    mavenCentral()
    maven {
        url = 'http://repo.spring.io/milestone'
    }
}

configurations {
    compile.exclude group: 'javax.servlet', module: 'servlet-api'
//    compile.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

springBoot {
    requiresUnpack = ['com.netflix.eureka:eureka-core', 'com.netflix.eureka:eureka-client']
}

dependencies {
//only while boot 1.3.3 - http://stackoverflow.com/questions/35738674/spring-boot-upgrade-from-1-3-2-to-1-3-3-logback-issue
    compile "ch.qos.logback:logback-core:1.1.3"
    compile "ch.qos.logback:logback-classic:1.1.3"


    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("de.codecentric:spring-boot-admin-starter-client:$springBootAdminVersion")
    compile('org.springframework.cloud:spring-cloud-starter-hystrix')
    compile('org.springframework.cloud:spring-cloud-starter-hystrix-dashboard')
    compile("org.springframework.cloud:spring-cloud-starter-turbine")
    compile("de.codecentric:spring-boot-admin-server:$springBootAdminVersion")
    compile("de.codecentric:spring-boot-admin-server-ui:$springBootAdminVersion")
    compile("org.springframework.cloud:spring-cloud-starter-eureka-server") {
        exclude module: 'javax.servlet:servlet-api'
    }
    compile('org.springframework.cloud:spring-cloud-starter-zuul')

    testCompile("org.springframework.boot:spring-boot-starter-test")

}


